"use client";
import { useEffect, useState } from 'react';
import { getSupabaseClient } from '@/lib/supabase/client';
import OccurrenceCard from '@/components/OccurrenceCard';

type Props = { params: { id: string } };

type Bill = {
  id: string;
  title: string;
  amount_total: number;
  due_date: string | null;
};

type Occ = {
  id: string;
  sequence: number;
  amount_due: number;
  due_date: string;
  suggested_submission_date: string | null;
  state: string;
};

export default function BillDetailPage({ params }: Props) {
  const supabase = getSupabaseClient();
  const [bill, setBill] = useState<Bill | null>(null);
  const [occ, setOcc] = useState<Occ[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  async function load() {
    setLoading(true);
    setError(null);
    const { data: bills, error: be } = await supabase
      .from('bills')
      .select('id,title,amount_total,due_date')
      .eq('id', params.id)
      .limit(1);
    if (be) setError(be.message);
    setBill(bills?.[0] ?? null);
    const { data: occurrences, error: oe } = await supabase
      .from('bill_occurrences')
      .select('id,sequence,amount_due,due_date,suggested_submission_date,state')
      .eq('bill_id', params.id)
      .order('sequence', { ascending: true });
    if (oe) setError(oe.message);
    setOcc((occurrences ?? []) as Occ[]);
    setLoading(false);
  }

  useEffect(() => {
    load();
  }, [params.id]);

  return (
    <div className="space-y-4">
      <div>
        <h1 className="text-xl font-semibold">{bill ? bill.title : 'Bill'}</h1>
        {bill && (
          <p className="text-sm text-neutral-500">Total ${bill.amount_total.toFixed(2)}{bill.due_date ? ` â€¢ Due ${bill.due_date}` : ''}</p>
        )}
      </div>
      {error && <div className="text-sm text-red-600">{error}</div>}
      <div className="grid grid-cols-1 gap-4 md:grid-cols-3">
        <div className="md:col-span-2 space-y-3">
          <div className="space-y-2">
            <h2 className="text-base font-semibold">Occurrences</h2>
            {loading ? (
              <div className="text-sm text-neutral-500">Loading...</div>
            ) : occ.length === 0 ? (
              <div className="text-sm text-neutral-500">No occurrences. These are generated by an Edge Function when a bill is created/updated.</div>
            ) : (
              <div className="grid grid-cols-1 gap-2 sm:grid-cols-2">
                {occ.map((o) => (
                  <OccurrenceCard key={o.id} amount={o.amount_due} due={o.due_date} suggested={o.suggested_submission_date} state={o.state} />
                ))}
              </div>
            )}
          </div>
          <div className="rounded-2xl border border-neutral-200 p-4 shadow-sm dark:border-neutral-800 card-surface">Attachments</div>
          <div className="rounded-2xl border border-neutral-200 p-4 shadow-sm dark:border-neutral-800 card-surface">Comments</div>
        </div>
        <div className="space-y-3">
          <div className="rounded-2xl border border-neutral-200 p-4 shadow-sm dark:border-neutral-800 card-surface">Approval Panel</div>
          <div className="rounded-2xl border border-neutral-200 p-4 shadow-sm dark:border-neutral-800 card-surface">Metadata</div>
        </div>
      </div>
    </div>
  );
}
